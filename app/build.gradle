apply plugin: 'com.android.application'

apply plugin: 'bugly'

// 依赖tinker插件
apply plugin: 'com.tencent.tinker.patch'

// 如果只用我们提供的插件，可以进行以下配置
apply plugin: 'com.tencent.bugly.tinker-support'

def appVersionCode = 301

def appVersionName = "3.0.0"

def appPatchDir = "*"

bugly {
    appId = '5a6c633bfa' // 注册时分配的App ID

    appKey = '02323fdb-cb27-4205-a153-47cf29e2f6fa' // 注册时分配的App Key
}

android {
    compileSdkVersion 24
    buildToolsVersion '24.0.2'

    defaultConfig {
        applicationId "me.xiu.xiu.campusvideo"
        minSdkVersion 15
        targetSdkVersion 24
        versionCode appVersionCode
        versionName appVersionName

        multiDexEnabled true
        multiDexKeepProguard file("keep_in_main_dex.txt")
    }

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java', 'src/main/aidl']
            resources.srcDirs = ['src/main/java', 'src/main/aidl']
            aidl.srcDirs = ['src/main/aidl']
            res.srcDirs = ['src/main/res']
            jniLibs.srcDirs = ['libs'] // 配置此处才会打包jni 的.so 文件
            assets.srcDirs = ['assets']
        }
    }

    signingConfigs {

        debug {
            storeFile file("./keystore/debug.keystore")
            storePassword "campusvideo"
            keyAlias "campusvideo"
            keyPassword "felix1992"
        }

        release {
            storeFile file("./keystore/release.keystore")
            storePassword "xyhnzyq#xiu"
            keyAlias "campusvideo"
            keyPassword "xyhnzyq#xiu"
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            debuggable true
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    dexOptions {
        jumboMode = true
    }
}


def tinkerDir = file("tinker")

def appId = appVersionName + "." + appVersionCode

/**
 * you can use assembleRelease to build you base apk
 * use tinkerPatchRelease -POLD_APK=  -PAPPLY_MAPPING=  -PAPPLY_RESOURCE= to build patch
 * add apk from the build/bakApk
 */
ext {
    // for some reason, you may want to ignore tinkerBuild, such as instant run debug build?
    tinkerEnabled = true

    tinkerBaseDir = appPatchDir
    // for normal build
    // old apk file to build patch apk
    tinkerOldApkPath = "${tinkerDir}/${tinkerBaseDir}/app-release.apk"
    // proguard mapping file to build patch apk
    tinkerApplyMappingPath = "${tinkerDir}/${tinkerBaseDir}/app-release-mapping.txt"
    // resource R.txt to build patch apk, must input if there is resource changed
    tinkerApplyResourcePath = "${tinkerDir}/${tinkerBaseDir}/app-release-R.txt"

    // only use for build all flavor, if not, just ignore this field
    tinkerBuildFlavorDirectory = "${tinkerDir}"
}

tinkerSupport {

    // 开启tinker-support插件，默认值true
    enable = tinkerEnabled

    // 指定归档目录，默认值当前module的子目录tinker
    autoBackupApkDir = 'tinker'

    // 出现可能风险时，停止编译补丁
    ignoreWarning = false

    // 验证签名是否一致
    patchSigning = true

    // 是否启用覆盖tinkerPatch配置功能，默认值false
    // 开启后tinkerPatch配置不生效，即无需添加tinkerPatch
    overrideTinkerPatchConfiguration = true

    /** buildConfig **/
    // 编译补丁包时，必需指定基线版本的apk，默认值为空
    // 如果为空，则表示不是进行补丁包的编译
    // @{link tinkerPatch.oldApk }
    baseApk = tinkerOldApkPath

    // 对应tinker插件applyMapping
    baseApkProguardMapping = tinkerApplyMappingPath

    // 对应tinker插件applyResourceMapping
    baseApkResourceMapping = tinkerApplyResourcePath

    tinkerId = appId

    /** dex **/
    dexMode = "jar"

    dexPattern = ["classes*.dex", "assets/secondary-dex-?.jar"]

    dexLoader = ["com.tencent.tinker.loader.*",
                 "me.xiu.xiu.campusvideo.core.app.VideoApplication"]

    /** lib **/
    libPattern = ["lib/armeabi/*.so"]

    /** res **/
    resPattern = ["res/*", "assets/*", "resources.arsc", "AndroidManifest.xml"]

    resIgnoreChange = ["assets/*_meta.txt"]

    resLargeModSize = 100

    /** packageConfig **/
    configField("patchMessage", "tinker is sample to use")

    configField("platform", "all")

    configField("patchVersion", "1.0")

    /** sevenZip **/
    sevenZipArtifact = "com.tencent.mm:SevenZip:1.1.10"
}

List<String> flavors = new ArrayList<>()

android.productFlavors.each { flavor ->
    flavors.add(flavor.name)
}

boolean hasFlavors = !flavors.isEmpty()

android.applicationVariants.all { variant ->
    /**
     * task type, you want to bak
     */
    def taskName = variant.name
    def tinkerId = appId

    tasks.all {
        if ("assemble${taskName.capitalize()}".equalsIgnoreCase(it.name)) {

            it.doLast {
                copy {
                    def fileNamePrefix = "${project.name}-${variant.baseName}"
                    def destPath = file("${tinkerDir}/${project.name}-${tinkerId}")

                    from variant.outputs.outputFile
                    into destPath

                    from "${buildDir}/outputs/mapping/${variant.dirName}/mapping.txt"
                    into destPath
                    rename { String fileName ->
                        fileName.replace("mapping.txt", "${fileNamePrefix}-mapping.txt")
                    }

                    from "${buildDir}/intermediates/symbols/${variant.dirName}/R.txt"
                    into destPath
                    rename { String fileName ->
                        fileName.replace("R.txt", "${fileNamePrefix}-R.txt")
                    }
                }
            }
        }
    }
}

dependencies {
    compile project(':ijkplayer-example')
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:24.2.1'
    compile 'com.squareup.okhttp:okhttp:2.5.0'
    compile 'org.apmem.tools:layouts:1.10'
    compile 'com.j256.ormlite:ormlite-core:4.48'
    compile 'com.j256.ormlite:ormlite-android:4.48'
    compile 'de.greenrobot:eventbus:3.0.0-beta1'
    compile 'de.greenrobot:java-common:2.0.0'
    compile 'org.apache.directory.studio:org.apache.commons.codec:1.8'
    compile 'jp.co.recruit_mp:android-HeaderFooterGridView:0.2.4'
    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'io.reactivex:rxjava:1.1.0'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.android.support:recyclerview-v7:24.2.1'
    compile 'com.bartoszlipinski.recyclerviewheader:library:1.2.0'
    compile 'com.android.support:cardview-v7:24.2.1'
    compile 'com.android.support:design:24.2.1'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.joooonho:selectableroundedimageview:1.0.1'
    compile 'com.squareup.okhttp3:okhttp:3.2.0'
    compile 'com.cjj.materialrefeshlayout:library:1.3.0'
    compile 'me.kareluo.intensify:gridview:1.0.2'
    compile 'com.tencent.bugly:nativecrashreport:latest.release'
    compile 'com.tencent.bugly:crashreport_upgrade:latest.release'
    // xlog, 日志记录库
    compile 'com.elvishew:xlog:1.3.0'

    // 权限请求
    compile 'pub.devrel:easypermissions:0.2.1'
}
